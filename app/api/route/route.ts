import {NextResponse} from 'next/server'
import {ADDR_BY_ID,DEPOT_BY_ID,haversine} from '@/lib/sample'
const GOOGLE_API_KEY=process.env.GOOGLE_API_KEY
export const dynamic='force-dynamic'
export async function GET(req){const p=new URL(req.url).searchParams; const origin_id=p.get('origin_id'); const dest_id=p.get('dest_id'); const olat=p.get('origin_lat'), olng=p.get('origin_lng'); const dlat=p.get('dest_lat'), dlng=p.get('dest_lng');
if(olat&&olng&&dlat&&dlng){ if(GOOGLE_API_KEY){ try{ const url=`https://maps.googleapis.com/maps/api/directions/json?origin=${olat},${olng}&destination=${dlat},${dlng}&departure_time=now&traffic_model=best_guess&key=${GOOGLE_API_KEY}`; const r=await fetch(url); const j=await r.json(); if(j.status==='OK'){ const leg=j.routes[0].legs[0]; const eta=Math.Math.round(((leg.duration_in_traffic||leg.duration).value)/60); const km=+(leg.distance.value/1000).toFixed(1); return NextResponse.json({distance_km:km,eta_minutes:eta,incidents:[],leave_by:'Plan 10 min buffer',polyline:null,source:'live'}) }}catch{} } const km=haversine(+olat,+olng,+dlat,+dlng); const cong=0.9+Math.random()*0.4; const eta=Math.max(5,Math.round((km/25)*60*cong)); const incidents=cong>1.2?['Congestion near ring road (sandbox).']:(cong>1.05?['Slower traffic than usual (sandbox).']:[]); const polyline={type:'LineString',coordinates:[[+olng,+olat],[+dlng,+dlat]]}; return NextResponse.json({distance_km:+km.toFixed(1),eta_minutes:eta,incidents,leave_by:'Leave within 15 min',polyline,source:'sandbox'}) }
if(origin_id&&dest_id){ const o=DEPOT_BY_ID[origin_id]; const d=ADDR_BY_ID[dest_id]; if(!o||!d) return NextResponse.json({error:'unknown origin/dest'},{status:400}); const km=haversine(o.lat,o.lng,d.lat,d.lng); const cong=0.85+Math.random()*0.5; const eta=Math.max(5,Math.Math.round((km/25)*60*cong)); const incidents=cong>1.1?['Moderate traffic on arterial road (mock).']:[]; const polyline={type:'LineString',coordinates:[[o.lng,o.lat],[d.lng,d.lat]]}; return NextResponse.json({distance_km:+km.toFixed(1),eta_minutes:eta,incidents,leave_by:eta<90?'Leave now':'Leave within 15 min',polyline,source:'mock'}) }
return NextResponse.json({error:'missing_params',hint:'Provide origin/dest â€” either IDs or lat/lng.'},{status:400}) }
